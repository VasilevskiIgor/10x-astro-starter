---
/**
 * Login Page
 *
 * Authentication page using Supabase Auth.
 * Features:
 * - Server-side session check (redirect if logged in)
 * - Support for redirect parameter
 * - Link to password reset and registration
 */

import Layout from "@/layouts/Layout.astro";
import { LoginForm } from "@/components/forms/LoginForm";

// Get redirect URL from query params
const url = new URL(Astro.request.url);
const redirectTo = url.searchParams.get("redirect") || "/trips";
---

<Layout title="Zaloguj się - Magic Travel App">
  <main
    class="min-h-screen bg-gradient-to-br from-indigo-50 via-white to-blue-50 flex items-center justify-center px-4 py-12 sm:px-6 lg:px-8"
  >
    <div class="w-full max-w-md">
      {/* Header */}
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Witaj ponownie</h1>
        <p class="mt-2 text-sm text-gray-600">Zaloguj się do swojego konta</p>
      </div>

      {/* Login Form Card */}
      <div class="bg-white rounded-lg shadow-xl p-8 border border-gray-200">
        <!-- Temporary: Use working test form -->
        <form id="loginFormWorking" class="flex flex-col gap-4">
          <div>
            <label class="block text-sm font-semibold mb-2">Email <span class="text-red-600">*</span></label>
            <input
              type="email"
              id="email"
              name="email"
              required
              value="test@example.com"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          <div>
            <label class="block text-sm font-semibold mb-2">Password <span class="text-red-600">*</span></label>
            <input
              type="password"
              id="password"
              name="password"
              required
              value="testpassword123"
              class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>
          <button
            type="submit"
            class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-md transition"
          >
            Zaloguj się
          </button>
          <div id="error" class="hidden text-red-600 text-sm"></div>
        </form>
      </div>

      {/* Footer Links */}
      <div class="mt-6 space-y-3 text-center">
        <p class="text-sm text-gray-600">
          Nie masz konta?{" "}
          <a href="/auth/signup" class="text-blue-600 hover:text-blue-700 font-semibold transition-colors">
            Zarejestruj się
          </a>
        </p>

        <p class="text-sm">
          <a href="/auth/forgot-password" class="text-gray-600 hover:text-gray-900 transition-colors">
            Nie pamiętasz hasła?
          </a>
        </p>
      </div>

      <div class="mt-4 text-center">
        <a href="/" class="text-sm text-gray-500 hover:text-gray-700 transition-colors"> ← Wróć do strony głównej </a>
      </div>
    </div>
  </main>

  <script>
    import { supabaseBrowser } from "@/lib/supabase-browser";

    const form = document.getElementById("loginFormWorking") as HTMLFormElement;
    const errorDiv = document.getElementById("error") as HTMLDivElement;

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();

      const email = (document.getElementById("email") as HTMLInputElement).value;
      const password = (document.getElementById("password") as HTMLInputElement).value;

      try {
        const { data, error } = await supabaseBrowser.auth.signInWithPassword({
          email,
          password,
        });

        if (error) {
          errorDiv.textContent = error.message;
          errorDiv.classList.remove("hidden");
          return;
        }

        // Get redirect from URL params
        const urlParams = new URLSearchParams(window.location.search);
        const redirectTo = urlParams.get("redirect") || "/trips";

        // Show success message
        errorDiv.classList.add("hidden");
        errorDiv.textContent = "✅ Logowanie udane! Przekierowywanie...";
        errorDiv.classList.remove("hidden");
        errorDiv.style.background = "#d4edda";
        errorDiv.style.color = "#155724";
        errorDiv.style.borderColor = "#c3e6cb";

        // Redirect after brief delay
        setTimeout(() => {
          window.location.href = redirectTo;
        }, 500);
      } catch (error: any) {
        errorDiv.textContent = error.message || "Wystąpił błąd";
        errorDiv.classList.remove("hidden");
      }
    });
  </script>
</Layout>
